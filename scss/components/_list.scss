// Amaze UI DingTalk: List
// =============================================================================

@import "../env";

@function get-item-nested-modifier($type: input) {
  @return #{$item-prefix}-nested-#{$type};
}

// Variables
// -----------------------------------------------------------------------------
$item-nested-input: get-item-nested-modifier();
$item-nested-textarea: get-item-nested-modifier(textarea);
$item-nested-switch: get-item-nested-modifier(switch);
$item-nested-select: get-item-nested-modifier(select);
$item-nested-checkbox: get-item-nested-modifier(checkbox);
$item-nested-radio: get-item-nested-modifier(radio);

// Mixins
// -----------------------------------------------------------------------------
@mixin list-item() {
  min-height: rem-calc(44);
  // margin-bottom: -1px;
  // border: 1px solid $list-border-color;
  // border-width: 1px 0;
}

%list-item-layout {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Output
// -----------------------------------------------------------------------------

.#{$list-prefix} {
  margin: $list-margin;
  padding: 0;
  list-style: none;
  background: $list-background;
  font-size: rem-calc(17);

  // retina border
  @extend %retina-line-top-before;
  @extend %retina-line-bottom-after;

  // nested list
  @extend %card-nested-component;

  // list + list
  & + & {
    @include retina-line-remove(before);
  }
}

// list block: list item
.#{$item-prefix} {
  @extend %list-item-layout;
  // padding: rem-calc(10) $global-spacing;
  @include list-item;

  // nested in card
  .#{$card-prefix}-body & {
    &:first-child {
      border-top: none;
    }

    &:last-child {
      border-bottom: none;
    }
  }

  &:last-child {
    .#{$item-prefix}-main {
      @include retina-line-remove(after);
      // background: red;
    }
  }
}

// item element: header
.#{$item-prefix}-header {
  min-height: 0;
  padding: rem-calc(3) $global-spacing;
  background: #f7f7f7;
  color: $gray-light;
  // @extend %retina-line-top-before;
  @extend %text-truncate;
}

// item modifier: linked
.#{$item-prefix}-linked {
  padding: 0;
  > a {
    color: $gray-darker;

    &:active {
      background: $list-active-background;
    }
  }
}

// item element: outer wrapper (maybe not needed)
.#{$item-prefix}-content {
  flex: 1;
  margin: 0;
  padding-left: rem-calc(15);
  @extend %list-item-layout;

  // nested textarea
  .#{$item-nested-textarea} & {
    align-items: flex-start;

    .#{$item-prefix}-media {
      padding-top: get-side($item-padding, top);
    }
  }
}

// item element: main content wrapper
.#{$item-prefix}-main {
  flex: 1;
  min-height: rem-calc(44);
  padding: $item-padding;
  @extend %list-item-layout;

  @extend %retina-line-bottom-after;

  // with subtitle/desc and so on
  .#{$item-prefix}-mixed & {
    display: block;
    padding-top: rem-calc(10);
    padding-bottom: rem-calc(10);
  }

  // nested switch
  .#{$switch-prefix} {
    margin-top: -(rem-calc(1));
  }

  // nested switch
  .#{$item-nested-switch} & {
    justify-content: flex-start;
  }

  // nested textarea
  .#{$item-nested-textarea} & {
    align-items: flex-start;
  }
}

// item: title wrapper -> wrap: title, title after, chevron
.#{$item-prefix}-title-row {
  @extend %list-item-layout;
  flex: 1;

  & ~ [class*="#{$item-prefix}-"] {
    margin-top: rem-calc(5);
  }
}

// item element: main -> title
.#{$item-prefix}-title {
  flex: 1;
  margin: 0;
  font-size: rem-calc(17);
  font-weight: 500;

  [class*="#{$item-prefix}-nested-"] & {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  // field title, 128px width
  .#{$item-nested-input} &,
  .#{$item-nested-switch} & {
    width: rem-calc(128);
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: rem-calc(128);
  }
}

// item element: link chevron
.#{$item-prefix}-icon {
  margin-right: -(rem-calc(5));
  color: rgba($gray-light, .45);
  font-size: rem-calc(16);
}

// item element: title after
.#{$item-prefix}-after {
  color: $gray-light;
  margin-left: rem-calc(5);

  & + .#{$icon-prefix} {
    margin-left: rem-calc(5);
  }
}

.#{$item-prefix}-subtitle {
  color: $gray;
}

.#{$item-prefix}-desc {
  font-size: rem-calc(14);
  color: $gray-light;
  @include line-clamp();
}

// item: media
.#{$item-prefix}-media {
  & + .#{$item-prefix}-main {
    margin-left: rem-calc(15);
  }
}

// List item: field in item
// -----------------------------------------------------------------------------
%item-nested-field {
  margin-top: -(get-side($item-padding, top));
  margin-bottom: -(get-side($item-padding, bottom));
}

.#{$item-nested-radio},
.#{$item-nested-checkbox} {
  &:active {
    background: $list-active-background;
  }
}

// list element: filed wrapper
.#{$item-prefix}-input,
.#{$item-prefix}-textarea,
.#{$item-prefix}-select {
  flex: 1;
  @extend %item-nested-field;

  //.#{$field-prefix}-label {
  //  @include fixes-flexbox-for-android;
  //  width: 35%;
  //}

  select {
    border: none;
    background: none;
    padding: 0;
  }

  input,
  textarea {
    flex: 1;

    &,
    &:hover,
    &:focus {
      margin: 0;
      padding: unquote(get-side($form-padding, top) + rem-calc(1) + " " + 0);
      border: none;
    }
  }
}

// select chevron
.#{$item-prefix}-select {
  position: relative;

  &:after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    margin-top: -2px;
    transform: translateY(-50%) rotate(135deg);
    @include square(rem-calc(8));
    border-top: 2px solid #ccc;
    border-right: 2px solid #ccc;
  }
}

%item-radio-checkbox {
  @extend %item-nested-field;
  display: block;
  padding: 0;

  // check icon
  .#{$icon-prefix} {
    @include square(rem-calc(20));
    line-height: rem-calc(20);
    font-size: rem-calc(20);
    overflow: hidden;
    border-radius: rem-calc(10);
    color: $global-primary;
  }

  input {
    display: none;
  }
}

.#{$item-prefix}-checkbox,
.#{$item-prefix}-radio {
  @extend %item-radio-checkbox;
}

.#{$item-prefix}-radio {
  .#{$icon-prefix} {
    display: none;
  }

  input:checked + .#{$icon-prefix} {
    display: block;
  }
}

// Modifiers: inset
// -----------------------------------------------------------------------------
.#{$list-prefix}-inset {
  margin-left: $global-spacing;
  margin-right: $global-spacing;
}

// Modifiers: color
// -----------------------------------------------------------------------------
%item-color-modifier {
  color: inherit;
}

@each $key, $color in $am-colors {
  @if ($key != 'dark') {
    .#{$item-prefix}-#{$key} {
      color: $color;

      .#{$item-prefix}-title {
        @extend %item-color-modifier;
      }
    }
  }
}
